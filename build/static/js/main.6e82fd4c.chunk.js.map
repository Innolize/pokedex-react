{"version":3,"sources":["components/BuscadorPokemon.js","components/ListadoPokemon.js","components/Paginador.jsx","components/Pokedex.js","customHooks/useFetch.jsx","utilidades.js","components/Pokemon/DescripcionPokemon.jsx","components/Pokemon/tipos.jsx","components/Pokemon/Stats.jsx","components/Pokemon/HabilidadPokemon.jsx","components/Pokemon/Pokemon.js","App.js","index.js"],"names":["BuscadorPokemon","onClick","value","onChangeBusqueda","style","flexDirection","height","src","alt","type","width","onChange","ContenedorListado","styled","div","CartaPokemon","numero","indicePokemon","pokemon","marginTop","backgroundColor","borderStyle","borderWidth","borderColor","color","to","slice","ListadoPokemon","listaPokemones","map","indice","Number","url","split","name","key","Paginador","botonAnterior","botonSiguiente","totalPokemones","pokemonesPorPagina","itemOnClick","totalPaginas","offset","Math","ceil","useState","paginaActual","SetPaginaActual","items","number","push","Pagination","Item","active","console","log","manejadorItemOnclick","Button","display","justifyContent","listStyle","Pokedex","valorBusqueda","setValorBusqueda","pokemones","setPokemones","matchPokemones","setMatchPokemones","setOffset","pokemonesPokedex","setPokemonesPokedex","useEffect","a","fetch","respuesta","json","rJSON","results","fetchPokemons","test","filter","indexOf","toLowerCase","r","fetchPokemonsPokedex","e","target","initialState","loading","data","error","fetchReducer","state","action","payload","useFetchReducer","fetchCallback","param","useReducer","dispatch","datos","obtenerDescripcion","id","ok","Error","descripcion","flavor_text_entries","find","x","language","buscarPokemon","fetchArrayTipos","array","Promise","all","response","temporal","names","tipos","fetchArrayStats","stat","stats","fetchArrayHabilidades","habilidad","ability","habilidades","DescripcionPokemon","Spinner","animation","role","className","flavor_text","TiposTraducidos","i","paddingRight","Stats","base_stat","HabilidadPokemon","Pokemon","pokemonSeleccionado","useParams","Container","Row","Col","textAlign","margin","types","paddingTop","weight","abilities","Header","Link","NavLink","Layout","Wrapper","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e82fd4c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\n\r\nconst BuscadorPokemon = ({ onClick, value, onChangeBusqueda }) => {\r\n\r\n  return (\r\n    <>\r\n      <div style={{ flexDirection: \"column\" }}>\r\n        <img style={{ height: \"120px\" }} src='https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1920px-International_Pok%C3%A9mon_logo.svg.png' alt=\"?\" />\r\n      </div>\r\n      <div>\r\n        <input type=\"text\" style={{ width: \"400px\" }} value={value} onChange={onChangeBusqueda} ></input >\r\n        <button onClick={onClick}>Buscar!</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BuscadorPokemon;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ContenedorListado = styled.div`\r\nmargin-top: 1em;\r\nmargin-left: 3em;\r\ndisplay: grid;\r\ngrid-row-gap: 3em;\r\ngrid-template-columns: repeat(auto-fill, minMax(0,200px));\r\n`\r\n\r\nconst CartaPokemon = ({ indicePokemon, pokemon }) => {\r\n\r\n  const numeroTresCifras = (numero) => {\r\n    let numeroConvertido = (\"000\" + numero).slice(-3)\r\n    return numeroConvertido\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"5px\", backgroundColor: \"gray\", height: \"160px\", width: \"160px\", borderStyle: \"solid\", borderWidth: \"1px\", borderColor: \"white\" }}>\r\n        <Link style={{ color: \"black\" }} to={`/pokemon/${pokemon}`}>\r\n          <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${numeroTresCifras(indicePokemon)}.png`} style={{ height: \"120px\" }} alt={pokemon}></img>\r\n\r\n          <p><strong>#{indicePokemon} {pokemon}</strong></p>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst ListadoPokemon = ({ listaPokemones }) => {\r\n\r\n  const obtenerIDdeURL = (url) => {\r\n    return url.split(\"/\")[6]\r\n  }\r\n\r\n  return (\r\n    <ContenedorListado>\r\n      {listaPokemones != null &&\r\n        listaPokemones.map((pokemon, indice) =>\r\n          <CartaPokemon indicePokemon={Number(obtenerIDdeURL(pokemon.url))} pokemon={pokemon.name} key={indice}></CartaPokemon>\r\n        )}\r\n    </ContenedorListado>\r\n  );\r\n}\r\n\r\nexport default ListadoPokemon;","import React, { useState } from 'react';\r\nimport { Button, Pagination } from 'react-bootstrap';\r\n\r\nconst Paginador = ({ botonAnterior, botonSiguiente, totalPokemones, pokemonesPorPagina, itemOnClick, offset }) => {\r\n    const totalPaginas = Math.ceil(totalPokemones / pokemonesPorPagina)\r\n    const [paginaActual, SetPaginaActual] = useState(1)\r\n\r\n    let items = [];\r\n\r\n    const manejadorItemOnclick = (number) => {\r\n        itemOnClick(pokemonesPorPagina * (number - 1))\r\n        SetPaginaActual(number)\r\n        console.log(paginaActual)\r\n    }\r\n\r\n    for (let number = 1; number <= totalPaginas; number++) {\r\n        items.push(\r\n            <Pagination.Item key={number} active={number === paginaActual} onClick={() => manejadorItemOnclick(number)}>\r\n                {number}\r\n            </Pagination.Item>,\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={botonAnterior}>Anterior</Button>\r\n            <Button onClick={botonSiguiente}>Siguiente</Button>\r\n\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", listStyle: \"none\" }}>{items}</ul>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Paginador","import React, { useState, useEffect } from 'react';\r\nimport BuscadorPokemon from './BuscadorPokemon';\r\nimport ListadoPokemon from './ListadoPokemon';\r\nimport Paginador from './Paginador';\r\n\r\nconst Pokedex = () => {\r\n\r\n    const [valorBusqueda, setValorBusqueda] = useState(\"\")\r\n    const [pokemones, setPokemones] = useState([])\r\n    const [matchPokemones, setMatchPokemones] = useState([])\r\n    const POKEMONES_POR_PAGINA = 20\r\n    const TOTAL_POKEMONES = \"807\"\r\n    const [offset, setOffset] = useState(0)\r\n    const [pokemonesPokedex, setPokemonesPokedex] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchPokemons = async () => {\r\n            const respuesta = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=${TOTAL_POKEMONES}&offset=0`)\r\n            const rJSON = await respuesta.json()\r\n            setPokemones(rJSON.results)\r\n        }\r\n        fetchPokemons()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (valorBusqueda !== \"\") {\r\n            const buscarPokemones = () => {\r\n                let pokemonesEncontrados = pokemones.filter(pokemon => pokemon.name.indexOf(valorBusqueda.toLowerCase()) > -1 && valorBusqueda !== \"\")\r\n                return pokemonesEncontrados\r\n            }\r\n            let test = buscarPokemones()\r\n            setMatchPokemones(test)\r\n        }\r\n        else {\r\n            setMatchPokemones(pokemonesPokedex.results)\r\n        }\r\n    }, [valorBusqueda, pokemones, pokemonesPokedex])\r\n\r\n    useEffect(() => {\r\n        const fetchPokemonsPokedex = async () => {\r\n            console.log(offset)\r\n\r\n            const respuesta = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=${POKEMONES_POR_PAGINA}&offset=${offset}`)\r\n            const r = await respuesta.json()\r\n            console.log(r.results)\r\n            setPokemonesPokedex(r)\r\n        }\r\n        fetchPokemonsPokedex()\r\n    }, [offset])\r\n\r\n    return (\r\n        <>\r\n            <BuscadorPokemon\r\n                onClick={() => { console.log(pokemones[411]) }}\r\n                value={valorBusqueda}\r\n                onChangeBusqueda={(e) => { setValorBusqueda(e.target.value) }}\r\n            />\r\n\r\n            <ListadoPokemon listaPokemones={matchPokemones}\r\n            />\r\n            {valorBusqueda === \"\" &&\r\n                <Paginador\r\n                    botonAnterior={() => { offset !== 0 && setOffset(offset - POKEMONES_POR_PAGINA) }}\r\n                    botonSiguiente={() => { offset < 807 && setOffset(offset + POKEMONES_POR_PAGINA) }}\r\n                    totalPokemones={TOTAL_POKEMONES}\r\n                    pokemonesPorPagina={POKEMONES_POR_PAGINA}\r\n                    offset={offset}\r\n                    itemOnClick={setOffset}\r\n\r\n                />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pokedex","import { useEffect, useReducer } from 'react'\r\n\r\nconst initialState = { loading: true, data: null, error: null }\r\n\r\nconst fetchReducer = (state, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case 'SUCCESS':\r\n            return { loading: false, data: payload, error: null };\r\n        case 'ERROR':\r\n            return { loading: false, data: null, error: payload };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const useFetchReducer = ( fetchCallback, param) => {\r\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        const test = async () => {\r\n            dispatch({ type: 'LOAD' })\r\n            try {\r\n                console.log(\"loop\")\r\n                const datos = await fetchCallback(param)\r\n                dispatch({ type: 'SUCCESS', payload: datos })\r\n            } catch (error) {\r\n                console.log(error)\r\n                dispatch({ type: 'ERROR', payload: error })\r\n            }\r\n        }\r\n        test()\r\n    }, [fetchCallback, param]);\r\n\r\n    return state;\r\n}\r\n","export async function obtenerDescripcion(id) {\r\n    console.log(id)\r\n    const r = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${id}/`)\r\n    if (!r.ok) {\r\n        throw new Error('API ERROR')\r\n    }\r\n    const rJSON = await r.json()\r\n\r\n    const descripcion = rJSON.flavor_text_entries.find((x) =>\r\n        x.language.name === \"es\");\r\n    return descripcion\r\n}\r\n\r\n\r\nexport const obtenerMiniDescripcion = async (id) => {\r\n    const r = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${id}/`)\r\n    const rJSON = await r.json()\r\n    let miniDescripcion = rJSON.genera.find((x) =>\r\n        x.language.name === \"es\" && x.version.name === \"y\");\r\n    return miniDescripcion\r\n}\r\n\r\nexport const buscarPokemon = async (pokemon) => {\r\n    const URL_BASE_POKEMON = \"https://pokeapi.co/api/v2/pokemon/\"\r\n    const datos = await fetch(`${URL_BASE_POKEMON}${pokemon}`)\r\n    if (!datos.ok) {\r\n        throw new Error('API ERROR')\r\n    }\r\n    return datos.json()\r\n}\r\n\r\n\r\n\r\nexport const fetchArrayTipos = async (array) => {\r\n    let tipos = await Promise.all(\r\n        array.map(async type => {\r\n            let r = await fetch(type.type.url)\r\n            let response = await r.json()\r\n            const temporal = response.names.find((x) =>\r\n                x.language.name === \"es\");\r\n            return temporal.name\r\n\r\n        })\r\n    )\r\n    return tipos\r\n\r\n}\r\n\r\nexport const fetchArrayStats = async (array) => {\r\n    console.log(array)\r\n    let stats = await Promise.all(\r\n        array.map(async type => {\r\n            let r = await fetch(type.stat.url)\r\n            let response = await r.json()\r\n            const temporal = response.names.find((x) =>\r\n                x.language.name === \"es\");\r\n            return temporal.name\r\n        })\r\n    )\r\n    return stats\r\n\r\n}\r\n\r\nexport const fetchArrayHabilidades = async (array) => {\r\n    console.log(array)\r\n    let habilidades = await Promise.all(\r\n        array.map(async habilidad => {\r\n            let r = await fetch(habilidad.ability.url)\r\n            let response = await r.json()\r\n            const temporal = response.names.find((x) =>\r\n                x.language.name === \"es\");\r\n            return temporal.name\r\n        })\r\n    )\r\n    return habilidades\r\n\r\n}","import React from 'react'\r\nimport { useFetchReducer } from '../../customHooks/useFetch';\r\nimport { obtenerDescripcion } from '../../utilidades'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\n\r\nexport const DescripcionPokemon = ({ id }) => {\r\n    const { data, loading, error } = useFetchReducer(obtenerDescripcion, id)\r\n\r\n    if (loading)\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>)\r\n    if (error)\r\n        return (<div>error</div>)\r\n    if (data)\r\n        console.log(data)\r\n    return (<div>{data.flavor_text}</div>)\r\n}\r\n\r\nexport default DescripcionPokemon","import React from 'react';\r\nimport { useFetchReducer } from '../../customHooks/useFetch';\r\nimport { fetchArrayTipos } from '../../utilidades';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nconst TiposTraducidos = ({ tipos }) => {\r\n    const { data, loading, error } = useFetchReducer(fetchArrayTipos, tipos)\r\n\r\n\r\n    if (loading)\r\n        return (<Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>)\r\n    if (error)\r\n        return (<div>error</div>)\r\n    if (data)\r\n        console.log(data)\r\n    return (\r\n        <div className=\"d-flex\">\r\n            {data.map((x, i) => <p key={i} style={{paddingRight:\"5px\"}}>{x}</p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TiposTraducidos","import React from 'react'\r\nimport { useFetchReducer } from '../../customHooks/useFetch';\r\nimport { fetchArrayStats } from '../../utilidades'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Stats = ({ stats }) => {\r\n    debugger\r\n    const { data, loading, error } = useFetchReducer(fetchArrayStats, stats)\r\n\r\n    if (loading)\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        )\r\n    if (error)\r\n        return (\r\n            <div>\"error\"</div>\r\n        )\r\n    if (data)\r\n        console.log(data)\r\n    return (\r\n        data.map((stat, i) => <p key={i}><strong>{stat}</strong>:{stats[i].base_stat}</p>)\r\n    )\r\n}\r\n\r\nexport default Stats","import React from 'react';\r\nimport { useFetchReducer } from '../../customHooks/useFetch';\r\nimport { fetchArrayHabilidades } from '../../utilidades';\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\n\r\nconst HabilidadPokemon = ({ habilidades }) => {\r\n    const { data, loading, error } = useFetchReducer(fetchArrayHabilidades, habilidades)\r\n    console.log(data)\r\n    if (loading)\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        )\r\n\r\n    if (error)\r\n        return (\r\n            <div>error</div>\r\n        )\r\n    if (data)\r\n        return (\r\n            <>\r\n                <p><strong>Habilidades:</strong></p>\r\n                {data.map((x, i) => <p key={i}>{x}</p>)}\r\n            </>\r\n        )\r\n}\r\n\r\nexport default HabilidadPokemon","import React from 'react';\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useFetchReducer } from '../../customHooks/useFetch'\r\nimport { buscarPokemon } from '../../utilidades';\r\nimport DescripcionPokemon from './DescripcionPokemon';\r\nimport TiposTraducidos from './tipos';\r\nimport Stats from './Stats'\r\nimport HabilidadPokemon from './HabilidadPokemon'\r\n\r\n\r\nconst Pokemon = ({ pokemon, id }) => {\r\n  const { pokemonSeleccionado } = useParams()\r\n  const { data, loading, error } = useFetchReducer(buscarPokemon, pokemonSeleccionado)\r\n\r\n  const numeroTresCifras = (numero) => {\r\n    let numeroConvertido = (\"000\" + numero).slice(-3)\r\n    return numeroConvertido\r\n  }\r\n  if (loading)\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    )\r\n  if (error)\r\n    return (<div>error</div>)\r\n\r\n  if (data)\r\n    debugger\r\n  console.log(data)\r\n  return (\r\n\r\n    <Container style={{ width: \"80%\", }}>\r\n      <Row style={{ width: \"100%\" }}>\r\n        <Col>\r\n          <img style={{ width: \"100%\" }} src={`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${numeroTresCifras(data.id)}.png`} alt={pokemon}></img>\r\n        </Col>\r\n        <Col style={{ backgroundColor: \"white\", color: \"black\", textAlign: \"left\" }}>\r\n          <div style={{ margin: \"1em\" }}>\r\n            <h3>Nº{data.id} {data.name}</h3>\r\n          </div>\r\n          <TiposTraducidos tipos={data.types}></TiposTraducidos>\r\n          <DescripcionPokemon id={data.id}></DescripcionPokemon>\r\n\r\n          <Row style={{paddingTop: \"10px\"}}>\r\n            <Col>\r\n              <Stats stats={data.stats}></Stats>\r\n            </Col>\r\n            <Col>\r\n              <div>\r\n                <p><strong>Peso:</strong> {data.weight / 10}Kg</p>\r\n              </div>\r\n              <div><strong>Altura:</strong> {data.height / 10} m</div>\r\n              <div>\r\n                <HabilidadPokemon habilidades={data.abilities}></HabilidadPokemon>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n\r\n        </Col>\r\n      </Row>\r\n    </Container >\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Pokemon;","import React from 'react';\nimport styled from '@emotion/styled';\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom';\nimport Pokedex from './components/Pokedex';\nimport Pokemon from './components/Pokemon/Pokemon';\n\nconst Header = styled.div`\nheight:10vh;\nwidth: 100%;\nbackground: green;\ndisplay:flex;\n`;\n\nconst Link = styled(NavLink)`\npadding: 0.5em;\n  background: none;\n  border: none;\n  border-radius: 1em;\n  outline: none;\n  color: white;\n  text-decoration: none;\n  `;\n\nconst Layout = styled.div`\ncolor: white;\nwidth: 100%;\nalign-items: center;\nmargin: auto;\ntext-align:center;\nfont-family: 'Roboto', sans-serif;\n`\n\nconst Wrapper = styled.div`\nbackground-color: #000;\nwidth: 100%;\nmin-height: 100vh;\n`\n\nfunction App() {\n  return (\n    <>\n      <Wrapper>\n        <Router>\n          <Header>\n            <Link to=\"/\">\n              <h3>Home</h3>\n            </Link>\n          </Header>\n          <Layout>\n            <Route path=\"/\" exact >\n              <Pokedex></Pokedex>\n            </Route>\n            <Route path=\"/pokemon/:pokemonSeleccionado\" >\n              <Pokemon></Pokemon>\n            </Route>\n          </Layout>\n\n        </Router>\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}